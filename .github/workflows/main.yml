name: Run Script

on:
  push:
    branches:
      - main
    paths:
      - '**.xlsx'  # Trigger the workflow only when .xlsx files are changed

permissions:
  contents: write

jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: triggered
        run: echo "A push event triggered this workflow."
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pandas
          python -m pip install matplotlib
          python -m pip install numpy
          python -m pip install python-pptx
          python -m pip install seaborn
          python -m pip install sendgrid
          python -m pip install openpyxl
        
      - name: Run script
        run: | 
          python test.py
          python capability_assessment_graphs.py

      - name: Configure git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
      - name: Commit and push changes
        env:
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}  # Use your secret name
        run: |
          git add .
          git commit -m "Automatically generated PPTX report" -a || echo "No changes to commit"
          git push https://${MY_GITHUB_TOKEN}@github.com/ehlke-hepworth/power-automate.git

      - name: Send email
        env:
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        run: |
          python -c "
          import os
          import base64
          from sendgrid import SendGridAPIClient
          from sendgrid.helpers.mail import Mail, Attachment, FileContent, FileName, FileType, Disposition
          
          message = Mail(
              from_email='ehlke.hepworth@relativ.co.za',
              to_emails='ehlke.hepworth@outlook.com',
              subject='Trigger - Test',
              html_content='<strong>Please find attached your Capability Assessment Report.</strong>'
          )

          file_path = 'Capability Assessment Report.pptx'
          with open(file_path, 'rb') as f:
              data = f.read()
              f.close()
          encoded_file = base64.b64encode(data).decode()

          attachment = Attachment()
          attachment.file_content = FileContent(encoded_file)
          attachment.file_type = FileType('application/vnd.openxmlformats-officedocument.presentationml.presentation')
          attachment.file_name = FileName('Capability Assessment Report.pptx')
          attachment.disposition = Disposition('attachment')
          message.add_attachment(attachment)

          try:
              sg = SendGridAPIClient(os.environ.get('SENDGRID_API_KEY'))
              response = sg.send(message)
              print(response.status_code)
              print(response.body)
              print(response.headers)
          except Exception as e:
              print(str(e))
          "
  
